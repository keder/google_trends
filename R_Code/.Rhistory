install.packages("gtools")
getOption("repos")
Sys.getenv("R_ENVIRON_USER")
Sys.getenv("R_PROFILE_USER")
install.packages("gtools")
install.packages("rtools")
install.packages("gtools")
install.packages("gtools")
install.packages("gtools")
getOption("repos")
install.packages("gtools")
install.packages("rtools")
update.packages(ask = FALSE)
sdfsd
setwd("G:/.shortcut-targets-by-id/1xFKIqf4LMx9ovfcQgoQSY_fkCY2GWLBg/2022 Kirpich-Shishkin Google Trends/R_Code")
source(paste(getwd(), "data_iterator.R", sep = "/"))
source(paste(getwd(), "forecasting.R", sep = "/"))
source(paste(getwd(), "calc_error.R", sep = "/"))
source(paste(getwd(), "make_plot.R", sep = "/"))
library(xtable)
prediction_length = 33
directory = "../data/incidence"
plot_dir = "../plots"
output_dir = "../R_Output"
method = "prophet"
trend_eval = data.frame(kw=c())
trend = get_next_trend(directory)
while (!is.null(trend))
{
print(paste0("Trend : ", trend$kw, " for state: ", trend$state))
if (!(trend$kw %in% trend_eval$kw)) {
trend_eval[nrow(trend_eval) + 1, "kw"] = trend$kw
}
if (is.null(trend$table)) {
trend_eval[which(trend_eval$kw == trend$kw), trend$state] <- NA
trend <- get_next_trend(directory)
next
}
table = trend$table
table_length <- dim(table)[1]
fit_length <- table_length - prediction_length
prediction <- predict_trend(table, prediction_length, paste0(method, "_pred"))
table$predicted <- prediction
print(prediction)
file_name <- paste0(plot_dir, "/", method, "_trend_prediction_", trend$kw, "_", trend$state, ".pdf")
data_to_plot <- list(prediction, table$data)
names(data_to_plot) <- c("Predicted Trend", "Actual Trend")
save_compare_plots(list(table$ds, table$ds), data_to_plot, file_name)
mse <- calc_mse(prediction[fit_length:table_length], table$data[fit_length:table_length])
trend_eval[which(trend_eval$kw == trend$kw), trend$state] <- mse
trend <- get_next_trend(directory)
}
print(trend_eval)
trend_eval[is.na(trend_eval)] <- "--"
table_file_name = paste0(output_dir, "/", method, "_mse_table", ".tex")
print.xtable( x = trend_eval, type="latex", file = table_file_name, include.rownames = FALSE )
traceback()
print.xtable( x = trend_eval, type="latex", file = table_file_name, include.rownames = FALSE )
traceback()
recover()
quit()
q
abort
abort()
print.xtable( x = trend_eval, type="latex", file = table_file_name, include.rownames = FALSE )
recover()
